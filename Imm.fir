circuit Imm :
  module Imm :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip ImmSrc : UInt<2>, flip instruction : UInt<32>, Imm_Itype_out : SInt<32>, Imm_Btype_out : SInt<32>, Imm_Jtype_out : SInt<32>, Imm_output : SInt<32>}

    wire Stype : SInt<32> @[Imm.scala 19:21]
    wire Btype : SInt<32> @[Imm.scala 20:21]
    wire Jtype : SInt<32> @[Imm.scala 21:21]
    wire Imm_Itype : SInt<32> @[Imm.scala 23:25]
    wire Imm_Stype : SInt<32> @[Imm.scala 24:25]
    wire Imm_Btype : SInt<32> @[Imm.scala 25:25]
    wire Imm_Jtype : SInt<32> @[Imm.scala 26:25]
    node _Stype_T = bits(io.instruction, 31, 25) @[Imm.scala 28:32]
    node _Stype_T_1 = bits(io.instruction, 11, 7) @[Imm.scala 28:54]
    node _Stype_T_2 = cat(_Stype_T, _Stype_T_1) @[Cat.scala 31:58]
    node _Stype_T_3 = asSInt(_Stype_T_2) @[Imm.scala 28:62]
    Stype <= _Stype_T_3 @[Imm.scala 28:11]
    node _Btype_T = bits(io.instruction, 31, 31) @[Imm.scala 29:33]
    node _Btype_T_1 = bits(io.instruction, 7, 7) @[Imm.scala 29:52]
    node _Btype_T_2 = bits(io.instruction, 30, 25) @[Imm.scala 29:70]
    node _Btype_T_3 = bits(io.instruction, 11, 8) @[Imm.scala 29:92]
    node Btype_lo = cat(_Btype_T_2, _Btype_T_3) @[Cat.scala 31:58]
    node Btype_hi = cat(_Btype_T, _Btype_T_1) @[Cat.scala 31:58]
    node _Btype_T_4 = cat(Btype_hi, Btype_lo) @[Cat.scala 31:58]
    node _Btype_T_5 = asSInt(_Btype_T_4) @[Imm.scala 29:100]
    Btype <= _Btype_T_5 @[Imm.scala 29:11]
    node _Jtype_T = bits(io.instruction, 31, 31) @[Imm.scala 30:32]
    node _Jtype_T_1 = bits(io.instruction, 19, 12) @[Imm.scala 30:51]
    node _Jtype_T_2 = bits(io.instruction, 20, 20) @[Imm.scala 30:73]
    node _Jtype_T_3 = bits(io.instruction, 30, 21) @[Imm.scala 30:92]
    node Jtype_lo = cat(_Jtype_T_2, _Jtype_T_3) @[Cat.scala 31:58]
    node Jtype_hi = cat(_Jtype_T, _Jtype_T_1) @[Cat.scala 31:58]
    node _Jtype_T_4 = cat(Jtype_hi, Jtype_lo) @[Cat.scala 31:58]
    node _Jtype_T_5 = asSInt(_Jtype_T_4) @[Imm.scala 30:101]
    Jtype <= _Jtype_T_5 @[Imm.scala 30:11]
    node _Imm_Itype_T = bits(io.instruction, 31, 31) @[Imm.scala 32:45]
    node _Imm_Itype_T_1 = bits(_Imm_Itype_T, 0, 0) @[Bitwise.scala 74:15]
    node _Imm_Itype_T_2 = mux(_Imm_Itype_T_1, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 74:12]
    node _Imm_Itype_T_3 = bits(io.instruction, 31, 20) @[Imm.scala 32:65]
    node _Imm_Itype_T_4 = cat(_Imm_Itype_T_2, _Imm_Itype_T_3) @[Cat.scala 31:58]
    node _Imm_Itype_T_5 = asSInt(_Imm_Itype_T_4) @[Imm.scala 32:75]
    Imm_Itype <= _Imm_Itype_T_5 @[Imm.scala 32:15]
    node _Imm_Stype_T = bits(Stype, 11, 11) @[Imm.scala 33:36]
    node _Imm_Stype_T_1 = bits(_Imm_Stype_T, 0, 0) @[Bitwise.scala 74:15]
    node _Imm_Stype_T_2 = mux(_Imm_Stype_T_1, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 74:12]
    node Imm_Stype_lo = asUInt(Stype) @[Cat.scala 31:58]
    node _Imm_Stype_T_3 = cat(_Imm_Stype_T_2, Imm_Stype_lo) @[Cat.scala 31:58]
    node _Imm_Stype_T_4 = asSInt(_Imm_Stype_T_3) @[Imm.scala 33:50]
    Imm_Stype <= _Imm_Stype_T_4 @[Imm.scala 33:15]
    node _Imm_Btype_T = bits(io.instruction, 31, 31) @[Imm.scala 34:45]
    node _Imm_Btype_T_1 = bits(_Imm_Btype_T, 0, 0) @[Bitwise.scala 74:15]
    node _Imm_Btype_T_2 = mux(_Imm_Btype_T_1, UInt<19>("h7ffff"), UInt<19>("h0")) @[Bitwise.scala 74:12]
    node Imm_Btype_lo = asUInt(Btype) @[Cat.scala 31:58]
    node _Imm_Btype_T_3 = cat(_Imm_Btype_T_2, Imm_Btype_lo) @[Cat.scala 31:58]
    node _Imm_Btype_T_4 = asSInt(_Imm_Btype_T_3) @[Imm.scala 34:59]
    Imm_Btype <= _Imm_Btype_T_4 @[Imm.scala 34:15]
    node _Imm_Jtype_T = bits(Jtype, 20, 20) @[Imm.scala 35:36]
    node _Imm_Jtype_T_1 = bits(_Imm_Jtype_T, 0, 0) @[Bitwise.scala 74:15]
    node _Imm_Jtype_T_2 = mux(_Imm_Jtype_T_1, UInt<12>("hfff"), UInt<12>("h0")) @[Bitwise.scala 74:12]
    node Imm_Jtype_lo = asUInt(Jtype) @[Cat.scala 31:58]
    node _Imm_Jtype_T_3 = cat(_Imm_Jtype_T_2, Imm_Jtype_lo) @[Cat.scala 31:58]
    node _Imm_Jtype_T_4 = asSInt(_Imm_Jtype_T_3) @[Imm.scala 35:50]
    Imm_Jtype <= _Imm_Jtype_T_4 @[Imm.scala 35:15]
    io.Imm_Btype_out <= Imm_Btype @[Imm.scala 37:22]
    io.Imm_Jtype_out <= Imm_Jtype @[Imm.scala 38:22]
    io.Imm_Itype_out <= Imm_Itype @[Imm.scala 39:22]
    node _T = eq(io.ImmSrc, UInt<1>("h0")) @[Imm.scala 41:21]
    when _T : @[Imm.scala 41:33]
      io.Imm_output <= Imm_Itype @[Imm.scala 42:23]
    else :
      node _T_1 = eq(io.ImmSrc, UInt<1>("h1")) @[Imm.scala 43:27]
      when _T_1 : @[Imm.scala 43:40]
        io.Imm_output <= Imm_Stype @[Imm.scala 44:23]
      else :
        node _T_2 = eq(io.ImmSrc, UInt<2>("h2")) @[Imm.scala 45:27]
        when _T_2 : @[Imm.scala 45:40]
          io.Imm_output <= Imm_Btype @[Imm.scala 46:23]
        else :
          node _T_3 = eq(io.ImmSrc, UInt<2>("h3")) @[Imm.scala 47:27]
          when _T_3 : @[Imm.scala 47:40]
            io.Imm_output <= Imm_Jtype @[Imm.scala 48:23]
          else :
            io.Imm_output <= asSInt(UInt<6>("h14")) @[Imm.scala 50:23]

